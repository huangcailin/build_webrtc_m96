name: Build WebRTC

on:
  #push:
  #  branches:
  #    - main
  #pull_request:
  #  branches:
  #    - main
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
    
permissions:
  contents: read

env:
  PLATFORM: linux64
  WEBRTC_BRANCH: branch-heads/4664
  DEPOT_TOOLS_PATH: /usr/local/webrtc
  BUILD_PATH: /tmp/webrtc-build

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker.io/centos:7
    steps:
      - uses: actions/checkout@v2
      #- name: Setup Debug Session
      #  uses: P3TERX/ssh2actions@main
      #if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      #  env:
      #    TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
       #   TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          
      - name: Install dependencies
        run: |
          yum -y update
          yum install -y ssh make wget git curl gcc-c++ nasm pkgconfig gtk2-devel libnotify-devel \
          glibc-static libstdc++-static libusb-static libusb-devel libudev-devel alsa-lib-devel \
          pulseaudio-libs-devel libv4l-devel openssl-devel libXrender-devel libXrandr-devel libvpx-devel \
          libsrtp-devel libjpeg-devel libpng-devel libX11-devel libXext-devel libXfixes-devel libXcomposite-devel \
          libXdamage-devel libXtst-devel libXcursor-devel libxkbcommon-devel libwayland-client-devel \
          libwayland-cursor-devel libwayland-egl-devel mesa-libGL-devel mesa-libEGL-devel fontconfig-devel \
          freetype-devel libxml2-devel libxslt-devel libsoup-devel libuuid-devel ninja-build python-psutil \
          python-six python-lxml python-crypto python2 python2-devel python2-setuptools python-devel \
          python-setuptools python-gobject python-gobject-devel python-libxml2 python-libxslt gstreamer1-devel \
          gstreamer1-plugins-base-devel gstreamer1-plugins-bad-free-devel gstreamer1-plugins-good-free-devel \
          gstreamer1-plugins-ugly-free-devel python3 python3-pip 
          yum install -y centos-release-scl-rh
          yum install -y devtoolset-10-gcc*

      - name: Update GlibC
        run: | 
          cd /tmp
          make -v
          gcc -v
          ldd --version
          wget http://ftp.gnu.org/gnu/glibc/glibc-2.18.tar.gz
          tar -xzvf glibc-2.18.tar.gz
          cd glibc-2.18
          mkdir build
          cd build
          ../configure --prefix=/usr
          make -j4
          make install
          ldd --version
        
      - name: updateGit
        run: |
          cd /tmp
          wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.24.1.tar.gz
          tar -xzvf git-2.24.1.tar.gz
          cd git-2.24.1
          ./configure prefix=/usr
          make && make install
        
      - name: Install Depot Tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git ${{ env.DEPOT_TOOLS_PATH }}/depot_tools
          
        
      - name: Build WebRTC
        run: |
          cd ${{ env.DEPOT_TOOLS_PATH }}
          export PATH=${{ env.DEPOT_TOOLS_PATH }}/depot_tools:${PATH}
          fetch --nohooks webrtc
          
          echo "cd ${{ env.DEPOT_TOOLS_PATH }}" >> build_script.sh
          echo "gcc -v" >> build_script.sh
          echo "export PATH=${{ env.DEPOT_TOOLS_PATH }}/depot_tools:\$PATH" >> build_script.sh
          echo "gcc -v" >> build_script.sh
          echo "cd src" >> build_script.sh
          echo "git checkout branch-heads/4664" >> build_script.sh
          echo "echo 'start build'" >> build_script.sh
          echo "pwd" >> build_script.sh
          echo "ls -al" >> build_script.sh
          echo "gcc -v" >> build_script.sh
          echo "git branch" >> build_script.sh
          echo "gclient sync" >> build_script.sh
          echo "gn gen out/Release --args='target_os=\"linux\" target_cpu=\"x64\" fatal_linker_warnings=false is_debug=false is_component_build=false use_sysroot=false is_clang=false use_lld=false treat_warnings_as_errors=false rtc_include_tests=false rtc_build_examples=false use_custom_libcxx=false use_rtti=true'" >> build_script.sh
          echo "echo 'start make'" >> build_script.sh
          echo "gcc -v" >> build_script.sh
          echo "ninja -C out/Release   " >> build_script.sh
          
          chmod +x build_script.sh
          echo "****************************"
          cat ./build_script.sh
          echo "****************************"
          scl enable devtoolset-10 './build_script.sh'


      - name: Compress and upload static library
        uses: actions/upload-artifact@v2
        with:
          name: webrtc_static_library
          path: src/out/Release/libwebrtc.a

      - name: Provide download link for static library
        run: |
          echo "Download the static library from this link: https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }}" 
